name: CI Pipeline

on:
  push:
    #branches:
    tags:
      - 'v[0-9].[0-9]+.[0-9]+'
      - 'v[0-9].[0-9]+.[0-9]+-alpha.[0-9]+'
      - 'v[0-9].[0-9]+.[0-9]+-beta.[0-9]+'
  pull_request:
    branches:
      - develop
      - master
  release:
    types:
      - created

env:
  SERVER_IP: 206.189.63.151
  SERVER_USER: deploy

jobs:
  #lint:
  #  name: Lint code
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v2
  #    - name: Setup Node.js
  #      uses: actions/setup-node@v1
  #      with:
  #        node-version: '14.x'
  #    - run: yarn install
  #    - name: Linting
  #      run: yarn eslint
  #audit:
  #  name: Audit libraries
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v2
  #    - name: Setup Node.js
  #      uses: actions/setup-node@v1
  #      with:
  #        node-version: '14.x'
  #    - run: yarn install
  #    - name: Auditing
  #      run: yarn audit
  #
  #build:
  #  name: Test building
  #  needs: [lint, audit]
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v2
  #    - name: Setup Node.js
  #      uses: actions/setup-node@v1
  #      with:
  #        node-version: '14.x'
  #    - run: yarn install
  #    - name: Building
  #      run: yarn build
#
#
  #test:
  #  name: Test code
  #  runs-on: ubuntu-latest
  #  needs: build
  #  steps:
  #    - uses: actions/checkout@v2
  #    - name: Setup Node.js
  #      uses: actions/setup-node@v1
  #      with:
  #        node-version: '14.x'
  #    - run: yarn install
  #    - name: Testing
  #      run: yarn test
  
  deploy-dev:
    name: Deploy a development version
    runs-on: ubuntu-latest
    needs: build
    if: ${{github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && contains(github.ref, '-alpha.')}}
    env:
      SERVER_HTML_PATH_DEV: '/var/www/dev.my-group-car.de/html'
    #needs: test
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - run: yarn install
      - name: Generate documentation
        run: yarn doc
      - name: Build
        run: yarn build --prod
      - name: Deploy
        run: bash scripts/deploy_dev.sh

